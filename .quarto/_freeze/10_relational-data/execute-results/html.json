{
  "hash": "5cf5990cbcfc8571dbc047c48b325ff5",
  "result": {
    "markdown": "---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Relational data\n\n\n\n\n\n\n**Learning Objectives**\n\nAfter completing this lab you should be able to \n\n* understand the differences between absolute abundance, relative abundance, and catch per unit effort (CPUE) and how to use them appropriately.\n* `bind_rows()`\n* `left_join()`\n* apply a \"conditional mutate\".\n\n\nFor each of our modules we will have a project-folder with an `Rproject`, `*.qmd`-files, and sub-directories for data, scripts, and results as described in our `Rproject` Tutorial. You should have a directory on your Desktop or Documents folder on your laptop (name it something like `bi349`) as a home directory for all of our project folders this semester. \n\n[You should have already downloaded the project directory for this module ](https://drive.google.com/drive/folders/1Sh4mtvdii1k_vU4-mfvgIGwJsZvo8MOt?usp=sharing), make sure the directory is unzipped and move it to your `bi328` directory. You can open the `Rproj` for this module either by double clicking on it which will launch `Rstudio` or by opening `Rstudio` and then using `File > Open Project` or by clicking on the `Rproject` icon in the top right of your program window and selecting `Open Project`. \n\nOnce you have opened a project you should see the project name in the top right corner^[Pro tip: If you run into issues where a quarto document won't render or file paths aren't working (especially if things were working previously) one of your first steps should be to double check that the correct `Rproj` is loaded.].\n\nI have dropped file called `10_relational-data.qmd` into our slack channel, download that and add it to your project directory. Use this file to work through this tutorial - you will hand in your rendered (\"knitted\") `quarto` file as your homework assignment. So, first thing in the `YAML` header, change the author to your name. You will use this `quarto` document to record your answers. Remember to use comments to annotate your code; at minimum you should have one comment per code set^[You should do this whether you are adding code yourself or using code from our manual, even if it isn't commented in the manual... especially when the code is already included for you, add comments to describe how the function works/what it does as we introduce it during the participatory coding session so you can refer back to it.] you may of course add as many comments as you need to be able to recall what you did]. Similarly, take notes in the document as we discuss discussion/reflection questions but make sure that you go back and clean them up for \"public consumption\".\n\nNow that you've got your basic data wrangling skills down, let's see what we can learn from the long-lining survey data. Remember, the overarching goal of the study was to answer these questions:\n\n1. How does the composition of elasmobranch communities compare across sites?\n2. How does the catch-per-unit-effort (CPUE) per species and life history compare across sites?\n3. What do the sex ratios look like?\n4. What environmental predictors can we use to predict presence of elasmobranchs?\n\nWe are going to stick to the first two questions to practice our data wrangling skills (and possibly pick up a few new ones ...)\n\nAs always, let's start by loading our packages needed for this analysis.\n\nWe are missing one package that we will need to install the first time, it contains a specialized function that we will need down the line.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install packages\ninstall.packages(\"FSA\")\n```\n:::\n\n\nNow let's load our packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load libraries\nlibrary(knitr)\nlibrary(tidyverse)\nlibrary(FSA)\n```\n:::\n\n\n\n## Composition of elasmobranch communities compare across sites\n\nLet's start by reading in the data set we will use for this analysis^[This is a data set that has been cleaned up to contain only the elasmobranchs caught during the survey since that is the taxonomic group we are interested in].\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelasmos <- read_delim(\"data/longline_elasmobranchs.txt\", delim = \"\\t\")\n```\n:::\n\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Give it a whirl\n\nProduce a table that contains the number of times a species was caught at each site and overall during the long-lining survey and give a brief description of the pattern(s) you see. Briefly, compare the list of species that were caught to the species identified in the longterm TWPD gill net monitoring program.\n\n:::\n\n\n::: {.callout-important icon=false}\n\n## {{< fa pen >}}   Did it!\n\n[Your answer here]\n\n:::\n\nYour table should look something like this. \n\n\n::: {#tbl-species-counts .cell tbl-cap='Number of individuals per caught per site and overall across all sites and years.'}\n::: {.cell-output-display}\n|Species                    | Aransas_Bay| Corpus_Christi_Bay| Redfish_Bay| Total|\n|:--------------------------|-----------:|------------------:|-----------:|-----:|\n|Carcharhinus_brevipinna    |          12|                 46|          12|    70|\n|Carcharhinus_leucas        |           3|                  4|           1|     8|\n|Carcharhinus_limbatus      |           1|                  1|           0|     2|\n|Carcharhinus_porosus       |           0|                  1|           0|     1|\n|Hypanus_americanus         |           3|                  1|           7|    11|\n|Hypanus_sabina             |           9|                  2|           0|    11|\n|Rhinoptera_bonasus         |           0|                  0|           1|     1|\n|Rhizoprionodon_terraenovae |           1|                  5|           8|    14|\n|Sphyrna_lewini             |           0|                  4|           0|     4|\n|Sphyrna_tiburo             |           1|                 18|          16|    35|\n:::\n:::\n\n\n::: {.callout-tip}\n\n## Protip\n\nYou can use `replace(is.na(.), 0)` to replace `NA` values in all columns with a `0`.\n\n:::\n\nWe are not only interested in which species are observed at each site, we also want to know what at what life stages different species are using the estuaries. Typically, we can classify sharks as young-of-the-year (YOY), juveniles (JUV), or mature (MAT). There are ways to observe this in the field, for example YOY can be identified using their umbilical scar and in male sharks whether or not the claspers are calcified is an indication of maturity. \n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Give it a whirl\n\nDetermine how many individuals have information on their life history stage.\n\n:::\n\n\n::: {.callout-important icon=false}\n\n## {{< fa pen >}}   Did it!\n\n[Your answer here]\n\n:::\n\nAnother way to determine the life history stage is to used previously information on length-at-maturity and how quickly YOY grow during their first year of life. This information is species-specific and has been determined for various species using life-history studies that rely on data sets that contain information on size, level of maturity and age^[Sharks can be aged using their vertebrae similar to how we can use growth rings on trees to age them.].\n\nFor example, [@carlsonGrowthDynamicsSpinner2005] determined the following length/history stage relationships for spinner sharks (*C. brevipinna*)\n\n* YOY\n  + females < 844mm\n  + males < 812mm\n* Juveniles\n  + females 844 - 1360mm\n  + males 812 - 1380mm\n* mature (adults)\n  + females > 1360 mm\n  + males > 1380 mm\n\n\nWhile [@neerAgeGrowthCarcharhinus2005] published these details for bull sharks (*C. leucas*)\n\n* YOY\n  + females < 700mm\n  + males < 700mm\n* Juveniles\n  + females 700 - 2250mm\n  + males 700 - 2100mm\n* mature (adults)\n  + females > 2250mm\n  + males > 2100mm\n\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Consider this\n\nFirst, conceptually describe how you could add this information to your data sheet in excel as a new column called `Estimated_Stage`.\n\n:::\n\nNow, let's consider how we could use our data wrangling skills to add a new column `Estimated_Stage` that contains life history stage based on length estimates. Let's first work this out for the two species above to keep it simple. \n\nWhen confronted with a more complex problems like this it can be helpful to first walk through the individual steps necessary^[Many people find it helpful to write things out in 'pseudo-code' first and then work out what the code needs to look like for the specific language they are working in].\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Consider this\n\nBriefly outline what you think our approach should look like - even if you don't know the functions you need to achieve this.\n\n:::\n\nThere are two approaches we can take.\n\n::: {.callout-tip collapse=true}\n\n## Solution 1\n\nThe first solution involves sub-setting your `data.frame` using `filter()` to contain only individuals that fulfill the conditions of specific length ranges that fit the ranges above for each life history stage and the add a new column with the correctly assigned life history stage^[Remember, you can use `&` and `|` to combine two conditions].\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# C. brevipinna, Carlson & Baremore 2005\n\nC.brevipinna_YOY <- filter(elasmos, Species==\"Carcharhinus_brevipinna\" & Sex==\"M\" & FL<=812 | Species==\"Carcharhinus_brevipinna\" & Sex==\"F\" & FL<=844 | Species==\"Carcharhinus_brevipinna\" & Sex==\"U\" & FL<=844) %>%\n  mutate(Estimated_Stage=\"YOY\")\n\nC.brevipinna_JUV <- filter(elasmos, Species==\"Carcharhinus_brevipinna\" & Sex==\"M\" & FL>812 & FL<=1380 | Species==\"Carcharhinus_brevipinna\" & Sex==\"F\" & FL>844 & FL<=1360 | Species==\"Carcharhinus_brevipinna\" & Sex==\"U\" & FL>844 & FL<=1360) %>%\n  mutate(Estimated_Stage=\"JUV\")\n\nC.brevipinna_MAT <- filter(elasmos, Species==\"Carcharhinus_brevipinna\" & Sex==\"M\" & FL>1380 | Species==\"Carcharhinus_brevipinna\" & Sex==\"F\" & FL>1360 | Species==\"Carcharhinus_brevipinna\" & Sex==\"U\" & FL>1360) %>%\n  mutate(Estimated_Stage=\"MAT\")\n\n\n# C. leucas, Neer et al. 2005\n\nC.leucas_YOY <- filter(elasmos, Species==\"Carcharhinus_leucas\" & FL<=700) %>%\n  mutate(Estimated_Stage=\"YOY\")\n\nC.leucas_JUV <- filter(elasmos, Species==\"Carcharhinus_leucas\" & Sex==\"M\" & FL>700 & FL<=2100 | Species==\"Carcharhinus_leucas\" & Sex==\"F\" & FL>700 & FL<=2250 | Species==\"Carcharhinus_leucas\" & Sex==\"U\" & FL>700 & FL<=2250) %>%\n  mutate(Estimated_Stage=\"JUV\")\n\nC.leucas_MAT <- filter(elasmos, Species==\"Carcharhinus_leucas\" & Sex==\"M\" & FL>2100 | Species==\"Carcharhinus_leucas\" & Sex==\"F\" & FL>2250 | Species==\"Carcharhinus_leucas\" & Sex==\"U\" & FL>2250) %>%\n  mutate(Estimated_Stage=\"MAT\")\n```\n:::\n\n\nNow you have a bunch of individual `data.frames` that we need to put back together into a single `data.frame`. We can do this using `bind_rows()` which will combine `data.frames` that have the same set of columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelasmos_stage <- bind_rows(C.brevipinna_YOY, C.brevipinna_JUV, C.brevipinna_MAT,\n                           C.leucas_YOY, C.leucas_JUV, C.leucas_MAT)\n```\n:::\n\n\n:::\n\nThis solution fits into our general scheme of \"split-apply-combine\" - except that we actually created multiple objects during our \"split\" stage. Is there a way to do this without creating individual objects?\n\n::: {.callout-tip collapse=true}\n\n## Solution 2\n\nIndeed, our second option circumvents having to first create subsets of the initial `data.frame` using something called a \"conditional mutate\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelasmos_stage <- elasmos %>%\n  filter(Species %in% c(\"Carcharhinus_leucas\", \"Carcharhinus_brevipinna\")) %>%\n  mutate(Estimated_Stage = case_when(Species == \"Carcharhinus_brevipinna\" & Sex==\"M\" & FL<=812 |\n                                       Species == \"Carcharhinus_brevipinna\" & Sex==\"F\" & FL<=844 |\n                                       Species == \"Carcharhinus_brevipinna\" & Sex==\"U\" & FL<=844 ~ \"YOY\",\n         Species==\"Carcharhinus_brevipinna\" & Sex==\"M\" & FL>812 & FL<=1380 |\n           Species==\"Carcharhinus_brevipinna\" & Sex==\"F\" & FL>844 & FL<=1360 |\n           Species==\"Carcharhinus_brevipinna\" & Sex==\"U\" & FL>844 & FL<=1360 ~ \"JUV\",\n         Species==\"Carcharhinus_brevipinna\" & Sex==\"M\" & FL>1380 |\n           Species==\"Carcharhinus_brevipinna\" & Sex==\"F\" & FL>1360 |\n           Species==\"Carcharhinus_brevipinna\" & Sex==\"U\" & FL>1360 ~ \"MAT\",\n         Species==\"Carcharhinus_leucas\" & FL<=700 ~ \"YOY\",\n         Species==\"Carcharhinus_leucas\" & Sex==\"M\" & FL>700 & FL<=2100 | \n           Species==\"Carcharhinus_leucas\" & Sex==\"F\" & FL>700 & FL<=2250 | \n           Species==\"Carcharhinus_leucas\" & Sex==\"U\" & FL>700 & FL<=2250 ~ \"JUV\",\n         Species==\"Carcharhinus_leucas\" & Sex==\"M\" & FL>2100 | \n           Species==\"Carcharhinus_leucas\" & Sex==\"F\" & FL>2250 | \n           Species==\"Carcharhinus_leucas\" & Sex==\"U\" & FL>2250 ~ \"MAT\"))\n```\n:::\n\n\nThis is of course a fairly complicated conditional mutate as we are generally combining multiple conditions per category. In this case we could also leave out the `|` and instead add a `~ STAGE` to each line depending on our coding preferences.\n\n:::\n\n\nNormally, we would have to extend our code to estimate life history stage for all of our sampled individuals but I have done this for you and you can load that file from your `data` folder.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelasmos <- read_delim(\"data/elasmos_complete.txt\", delim = \"\\t\")\n```\n:::\n\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Give it a whirl\n\nUse this data set to create a table with the number of individuals per life history stage caught at each site.\n\n:::\n\n\nThis is what you table should look like.\n\n\n::: {#tbl-life-hist-counts .cell tbl-cap='Number of individuals per species caught at each site by life history stage.'}\n::: {.cell-output-display}\n|Species                    |Site               | Total| YOY| JUV| MAT| UND|\n|:--------------------------|:------------------|-----:|---:|---:|---:|---:|\n|Carcharhinus_brevipinna    |Aransas_Bay        |    12|  11|   0|   0|   1|\n|Carcharhinus_brevipinna    |Corpus_Christi_Bay |    46|  45|   0|   0|   1|\n|Carcharhinus_brevipinna    |Redfish_Bay        |    12|   8|   3|   0|   1|\n|Carcharhinus_leucas        |Aransas_Bay        |     3|   0|   3|   0|   0|\n|Carcharhinus_leucas        |Corpus_Christi_Bay |     4|   4|   0|   0|   0|\n|Carcharhinus_leucas        |Redfish_Bay        |     1|   0|   1|   0|   0|\n|Carcharhinus_limbatus      |Aransas_Bay        |     1|   0|   1|   0|   0|\n|Carcharhinus_limbatus      |Corpus_Christi_Bay |     1|   1|   0|   0|   0|\n|Carcharhinus_porosus       |Corpus_Christi_Bay |     1|   0|   1|   0|   0|\n|Hypanus_americanus         |Aransas_Bay        |     3|   0|   0|   3|   0|\n|Hypanus_americanus         |Corpus_Christi_Bay |     1|   0|   0|   1|   0|\n|Hypanus_americanus         |Redfish_Bay        |     7|   0|   3|   4|   0|\n|Hypanus_sabina             |Aransas_Bay        |     9|   0|   0|   9|   0|\n|Hypanus_sabina             |Corpus_Christi_Bay |     2|   0|   0|   2|   0|\n|Rhinoptera_bonasus         |Redfish_Bay        |     1|   0|   0|   1|   0|\n|Rhizoprionodon_terraenovae |Aransas_Bay        |     1|   1|   0|   0|   0|\n|Rhizoprionodon_terraenovae |Corpus_Christi_Bay |     5|   5|   0|   0|   0|\n|Rhizoprionodon_terraenovae |Redfish_Bay        |     8|   8|   0|   0|   0|\n|Sphyrna_lewini             |Corpus_Christi_Bay |     4|   1|   3|   0|   0|\n|Sphyrna_tiburo             |Aransas_Bay        |     1|   0|   1|   0|   0|\n|Sphyrna_tiburo             |Corpus_Christi_Bay |    18|   0|  14|   3|   1|\n|Sphyrna_tiburo             |Redfish_Bay        |    16|   1|   9|   6|   0|\n:::\n:::\n\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Consider this\n\nBriefly describe your results to compare total catch across sites accounting for differences in life history stage.\n\n:::\n\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Give it a whirl\n\nSubset your data to contain only YOY and generate a table to investigate whether they were caught across all years sampling occured. Summarize your results in 2-3 sentences.\n\n:::\n\n\nThis is what your table should look like:\n\n\n::: {#tbl-YOY-years .cell tbl-cap='Number of YOY caught at each site in each sampling year.'}\n::: {.cell-output-display}\n|Site               |Species                    | 2015| 2016| 2017| 2018|\n|:------------------|:--------------------------|----:|----:|----:|----:|\n|Aransas_Bay        |Carcharhinus_brevipinna    |    7|    0|    3|    1|\n|Aransas_Bay        |Rhizoprionodon_terraenovae |    0|    0|    1|    0|\n|Corpus_Christi_Bay |Carcharhinus_brevipinna    |    0|    6|   16|   23|\n|Corpus_Christi_Bay |Carcharhinus_leucas        |    1|    3|    0|    0|\n|Corpus_Christi_Bay |Carcharhinus_limbatus      |    0|    1|    0|    0|\n|Corpus_Christi_Bay |Rhizoprionodon_terraenovae |    0|    3|    1|    1|\n|Corpus_Christi_Bay |Sphyrna_lewini             |    0|    0|    1|    0|\n|Redfish_Bay        |Carcharhinus_brevipinna    |    1|    0|    3|    4|\n|Redfish_Bay        |Rhizoprionodon_terraenovae |    4|    4|    0|    0|\n|Redfish_Bay        |Sphyrna_tiburo             |    1|    0|    0|    0|\n:::\n:::\n\n\n\n## Comparison of CPUE per species across sites\n\n::: {.callout-important icon=false}\n\n## {{< fa clipboard-question >}}   Consider this\n\nConsider disadvantages of using absolute counts of occurrence to compare composition across sites. What measure could you use instead of total catch to fix this issue?\n\n:::\n\n\nCatch-per-unit-effort (CPUE) is an indirect measure of abundance. Essentially, it is a way to measure relative abundance and be able to account for differences in sampling effort - the key is defining how you will measure \"effort\".\n\n::: {.callout-important icon=false}\n\n## {{< fa clipboard-question >}}   Consider this\n\nBriefly discuss what measures we could use to determine effort.\n\n:::\n\n\nWe are going to calculate effort as \"hook hours\". \n\nTo do this we need to know how many hooks were on the line per set^[A set means that baited hooks on leaders (individual lines) where attached to the main line and that main line was then \"set\" in the water for a given period of time before pulling it back in and determining which fish were caught on hooks.] and how long the entire line was in the water per set (this is called soak time), then we can easily calculate hook hours of each set as the number of hooks multiplied by the soak time. And then we can divide the number of e.g. sharks caught on a set (\"catch) by hook hours (\"effort\") to calculate CPUE.\n\nYour `data` folder contains as tab-delimited file with set meta-data. This includes information that describes the set itself including date of the set, site, soak time, and location and also parameters describing the conditions of the set such as temperature, salinity, depth, and dissolved oxygen.\n\nLet's read in the data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset_meta <- read_delim(\"data/set_data.txt\", delim = \"\\t\")\n```\n:::\n\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Give it a whirl\n\nTake a quick look at the data set to determine what columns are included and what information we can learn about each individual set. How can you amend the data set to include hook hours?\n\n:::\n\n\n::: {.callout-tip collapse=true}\n\n## Solution\n\nCorrect, a simple `mutate()` will do the trick.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset_meta <- set_meta %>%\n  mutate(Hook_Hours = Hooks * Soak_Time)\n```\n:::\n\n\n:::\n\nNext we need to count the number of sharks caught per set.\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Give it a whirl\n\nIf we look at our elasmo `data.frame` you will notice that we have a column called Set but that number indicates the nth set of a give sample day. How can you add a column called `Set_ID` that consists of the date and the set number?\n\n:::\n\n\n::: {.callout-tip collapse=true}\n\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelasmos <- elasmos %>%\n  unite(Set_ID, Year, Month, Day, Set, sep = \"_\", remove = FALSE) %>%\n  arrange(Set_ID)\n```\n:::\n\n\n:::\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Give it a whirl\n\nNow create a new object called elasmos_set that contains the number of sharks caught per set.\n\n:::\n\n\n::: {.callout-tip collapse=true}\n\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelasmos_set <- elasmos %>%\n  count(Set_ID)\n```\n:::\n\n\n:::\n\nNow we have two `data.frame`s one contains the information on how many sharks were caught per set and a second one that contains information about the set, including hook hours. This means that our next step will need to be to combine these two data sets.\n \n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Consider this\n\nEarlier we learned about `bind_rows()` which allows us to combine two `data.frame`s that contain identical columns, i.e. row-wise. There is an equivalent function called `bind_columns()` which allows us to combine `data.frame`s column-wise. \n\nConsider what the problem would be in using `bind_columns()` to combine these two data sets.\n\n:::\n\n\nHaving multiple tables containing data pertaining to the same question is referred to as **relational data** - we are interested in how the contents of a pair of table related to each other, not just the individual data sets. Combining two tables is called a **join**. In this case the type of join we want to execute is called a **mutating join** which means we can add new variables from one `data.frame` (`set_meta`) to matching observations in another (`elasmos_set`).\n\nIn order to do that we need to have one column (the **key**) that way the function can match observations in one `data.frame` by that **key** and then copy the matching observations in the columns from the second `data.frame` across. \n\nWhen performing a **join**, new columns are added to the right. We will use the function `full_join()` which means that all the rows from the left and right `data.frame` will be retained - when we used `count()` that excluded sets where no sharks were caught, by using a `full_join()` we can add those back in.\n\nWe currently do not have a matching column between the two data sets, so our first step will be to add a new column called `Set_ID` to our `set_meta` `data.frame`, then we can use `full_join()` to join the two tables. The argument `by` can be used to specify the column to use as the key. For our example here we have a column with the same name - in general, the function is \"smart\" enough to identify shared columns and so you do not necessarily have to specify it. \n\n::: {.column-margin}\n\nYou can pull up the help page using `?full_join` to learn how to join tables that have multiple columns in common or that might have a column in common though it is named differently between the two tables.\n\nNote the notation `elasmo_set <- full_join(elasmos_set, set_meta, by = \"Set_ID\")` will produce the same result as the syntax we are using here.\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add set id column\nset_meta <- set_meta %>%\n  unite(Set_ID, Year, Month, Day, Set, sep = \"_\", remove = FALSE)\n\n# join data sets\nelasmos_set <- elasmos_set %>%\n  full_join(set_meta) %>%\n  replace_na(list(n = 0))\n```\n:::\n\n\nNow we can calculate CPUE for sharks per site.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelasmos_set <- elasmos_set %>%\n  mutate(CPUE = n/Hook_Hours)\n```\n:::\n\n\nAnd from that we can easily calculate mean and standard deviation CPUE of catching sharks by site.\n\n\n::: {#tbl-CPUE .cell tbl-cap='mean +/- sd CPUE'}\n::: {.cell-output-display}\n|Site               | mean_CPUE|  std_CPUE|\n|:------------------|---------:|---------:|\n|Aransas_Bay        | 0.0048954| 0.0089735|\n|Corpus_Christi_Bay | 0.0135243| 0.0185803|\n|Redfish_Bay        | 0.0069282| 0.0114742|\n:::\n:::\n\n\nWe are going to perform a Kruskal-Wallis rank sum test to determine if there is significant heterogeneity among sites^[You are probably more familiar with the framework of using an ANOVA to test for significant heterogeneity and pairwise t-tests to test for equality of means of a set of values. KW is similar but is a non-parametric approach and does not make assumptions about the distribution of values.].\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# KW to test for significant heterogeneity\nkruskal.test(CPUE ~ Site, data = elasmos_set)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tKruskal-Wallis rank sum test\n\ndata:  CPUE by Site\nKruskal-Wallis chi-squared = 12.325, df = 2, p-value = 0.002106\n```\n:::\n:::\n\n\nAnd we will follow that using a Dunn's test for pairwise comparisons.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# post-hoc Dunn test\ndunnTest(CPUE ~ Site, data = elasmos_set, method = \"bh\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                        Comparison          Z      P.unadj       P.adj\n1 Aransas_Bay - Corpus_Christi_Bay -3.3553910 0.0007925288 0.002377586\n2        Aransas_Bay - Redfish_Bay -0.7980727 0.4248282807 0.424828281\n3 Corpus_Christi_Bay - Redfish_Bay  2.5669868 0.0102586520 0.015387978\n```\n:::\n:::\n\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Consider this\n\nBriefly describe your results and discuss what this result could mean for our overarching question of identifying shark nurseries.\n\n:::\n\n\nOf course, we are interested how CPUE compares across species and sites.\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Give it a whirl\n\nChoose one species and calculate the CPUE per set. For convenience convert CPUE to effort per 1000 hook hours and then calculate the mean CPUE per 1000 hooks per site for that species.\n\n:::\n\n\n::: {.callout-tip collapse=true}\n\n## Solution\n\nThis is what that could look like for a single species.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspecies <- \"Carcharhinus_brevipinna\"\n\nspecies_CPUE <- elasmos %>%\n  filter(Species == species) %>%\n  count(Set_ID) %>%\n  full_join(set_meta) %>%\n  replace_na(list(n = 0)) %>%\n  mutate(CPUE = n/Hook_Hours,\n         CPUE_1000 = CPUE * 1000) %>%\n  group_by(Site) %>%\n  summarize(mean_CPUE = mean(CPUE_1000))\n```\n:::\n\n\n:::\n\nFor better presentation, we probably want to convert that do a wider data set; your results should look like this.\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Catch per unit effort (1000 hook hours) for each site.\n\n| Aransas_Bay| Corpus_Christi_Bay| Redfish_Bay|\n|-----------:|------------------:|-----------:|\n|        1.91|               7.88|        1.76|\n:::\n:::\n\n\nWe actually want to have this information for all species, rather than create individual `data.frame`s for each species and then combine those using `bind_rows()`, I will show you a more efficient way of coding this using a `for loop`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create empty list\nspecies_CPUE <- list()\n\n# calculate hook hours for each species per site\nfor(species in unique(elasmos$Species)){\n  \n  species_CPUE[[species]] <- elasmos %>%\n    filter(Species == species) %>%\n    count(Set_ID) %>%\n    full_join(set_meta) %>%\n    replace_na(list(n = 0)) %>%\n    mutate(CPUE = n/Hook_Hours,\n           CPUE_1000 = CPUE * 1000)\n\n}\n\n# combine data frames in list into single \nCPUE <- bind_rows(species_CPUE, .id = \"Species\")\n```\n:::\n\n\nNext, we would want to run KW tests to determine if there are significant differences among sites for each species. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create empty dataframe for results\nresults <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), \n                    c(\"Species\", \"pvalue\")) %>%\n  mutate(Species = as.character(Species),\n         pvalue = as.numeric(pvalue))\n\nfor(species in unique(CPUE$Species)){\n  \n  # filter CPUE per species\n  tmp <- CPUE %>%\n    filter(Species == species)\n  \n  # KW to test for significant heterogeneity\n  KW <- kruskal.test(CPUE ~ Site, data = tmp)\n  \n  # extract p-value\n  df <- data.frame(\"Species\" = species,\n                   \"pvalue\" = as.numeric(KW$p.value))\n  \n  results <- bind_rows(results, df)\n\n}\n```\n:::\n\n\nLet's calculate mean CPUE per species and site, turn that into a wide table for easier comparison and add the p-values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCPUE_sign <- CPUE %>%\n    group_by(Species, Site) %>%\n    summarize(mean_CPUE = mean(CPUE_1000)) %>%\n    pivot_wider(names_from = Site, values_from = mean_CPUE) %>%\n    left_join(results) %>%\n    arrange(Species)\n```\n:::\n\n\nOnce we've run that code to wrangle and transform our data we can compare CPUE for each species and site.\n\n\n::: {#tbl-CPUE-species-site .cell tbl-cap='Catch per unit effort (per 1000 hook hours) for each species by site, p-value indicates whether there are significant differences among sites for a given species.'}\n::: {.cell-output-display}\n|Species                    | Aransas_Bay| Corpus_Christi_Bay| Redfish_Bay| pvalue|\n|:--------------------------|-----------:|------------------:|-----------:|------:|\n|Carcharhinus_brevipinna    |        1.91|               7.88|        1.76|   0.00|\n|Carcharhinus_leucas        |        0.49|               0.52|        0.14|   0.54|\n|Carcharhinus_limbatus      |        0.14|               0.18|        0.00|   0.60|\n|Carcharhinus_porosus       |        0.00|               0.15|        0.00|   0.37|\n|Hypanus_americanus         |        0.49|               0.14|        1.08|   0.25|\n|Hypanus_sabina             |        1.50|               0.29|        0.00|   0.00|\n|Rhinoptera_bonasus         |        0.00|               0.00|        0.16|   0.37|\n|Rhizoprionodon_terraenovae |        0.14|               0.90|        1.29|   0.22|\n|Sphyrna_lewini             |        0.00|               0.50|        0.00|   0.02|\n|Sphyrna_tiburo             |        0.22|               2.96|        2.49|   0.00|\n:::\n:::\n\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Consider this\n\nUse the table with CPUE per species in your lab manual to briefly describe the results comparing CPUE per species and site and relate that to our overarching question of identifying shark nurseries^[Normally, we would want to run additional pairwise tests for each species where there are significant differences among sites, but we'll skip that step for now and stick to the big picture.].\n\n:::\n\n\n## Comparison of CPUE for different life history stages\n\nOf course, we are not only interested in which species were caught at each site, we also want to know what life history stages those individuals were at when they were caught.\n\nWe will use a similar strategy as above to create a data frame with CPUE per site, species, and life history stage and produce a table comparing the means.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create empty list\nspecies_CPUE <- list()\n\n# calculate hook hours for each species per site\nfor(species in unique(elasmos$Species)){\n  \n  for(stage in unique(elasmos$Estimated_Stage)){\n    \n      species_CPUE[[paste(species, stage, sep = \":\")]] <- elasmos %>%\n        filter(Species == species & Estimated_Stage == stage) %>%\n        count(Set_ID) %>%\n        full_join(set_meta) %>%\n        replace_na(list(n = 0)) %>%\n        mutate(Estimate_Stage = stage, \n               CPUE = n/Hook_Hours,\n               CPUE_1000 = CPUE * 1000)\n\n  }\n  \n}\n\n# combine data frames in list into single \nCPUE <- bind_rows(species_CPUE, .id = \"Species_Stage\") %>%\n  select(Species_Stage, Set_ID, Site, Hooks, Soak_Time, Hook_Hours, CPUE, CPUE_1000) %>%\n  separate(Species_Stage, into = c(\"Species\", \"Stage\"), sep = \":\", remove = FALSE) %>%\n    group_by(Species_Stage, Site) %>%\n    summarize(mean_CPUE = mean(CPUE_1000)) %>%\n    pivot_wider(names_from = Site, values_from = mean_CPUE) %>%\n    filter(if_any(c(Aransas_Bay, Corpus_Christi_Bay, Redfish_Bay), ~ . > 0)) %>%\n    separate(Species_Stage, into = c(\"Species\", \"Stage\"), sep = \":\") %>%\n    filter(!Stage == \"UND\")\n```\n:::\n\n\nThis will produce the following table summarizing the results.\n\n\n::: {#tbl-life-hist .cell tbl-cap='Comparison of CPUE by life history stage for all observed life history stages in Aransas, Corpus Christi, and Redfish Bay.'}\n::: {.cell-output-display}\n|Species                    |Stage | Aransas_Bay| Corpus_Christi_Bay| Redfish_Bay|\n|:--------------------------|:-----|-----------:|------------------:|-----------:|\n|Carcharhinus_brevipinna    |JUV   |      0.0000|             0.0000|      0.4586|\n|Carcharhinus_brevipinna    |YOY   |      1.7477|             7.7283|      1.1510|\n|Carcharhinus_leucas        |JUV   |      0.4940|             0.0000|      0.1357|\n|Carcharhinus_leucas        |YOY   |      0.0000|             0.5209|      0.0000|\n|Carcharhinus_limbatus      |JUV   |      0.1443|             0.0000|      0.0000|\n|Carcharhinus_limbatus      |YOY   |      0.0000|             0.1794|      0.0000|\n|Carcharhinus_porosus       |JUV   |      0.0000|             0.1480|      0.0000|\n|Hypanus_americanus         |JUV   |      0.0000|             0.0000|      0.4745|\n|Hypanus_americanus         |MAT   |      0.4872|             0.1444|      0.6095|\n|Hypanus_sabina             |MAT   |      1.4967|             0.2940|      0.0000|\n|Rhinoptera_bonasus         |MAT   |      0.0000|             0.0000|      0.1614|\n|Rhizoprionodon_terraenovae |YOY   |      0.1443|             0.8970|      1.2884|\n|Sphyrna_lewini             |JUV   |      0.0000|             0.3768|      0.0000|\n|Sphyrna_lewini             |YOY   |      0.0000|             0.1210|      0.0000|\n|Sphyrna_tiburo             |JUV   |      0.2217|             2.3098|      1.4763|\n|Sphyrna_tiburo             |MAT   |      0.0000|             0.4455|      0.8716|\n|Sphyrna_tiburo             |YOY   |      0.0000|             0.0000|      0.1468|\n:::\n:::\n\n\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Consider this\n\nBriefly describe the results comparing CPUE per life history stage and site; these results are all statistically significant.\n\n:::\n\n\n::: {.callout-note icon=false}\n\n## {{< fa clipboard-question >}}   Consider this\n\nRelate your all of our results back to the overarching question of identifying shark nurseries in Texas Bays and Estuaries to write a short conclusion in terms of what this study has (or has not demonstrated).\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}