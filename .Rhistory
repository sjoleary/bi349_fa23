elasmos %>%
filter(Estimated_Stage == "YOY") %>%
group_by(Site, Year, Species) %>%
count() %>%
arrange(Year) %>%
pivot_wider(names_from = Year, values_from = n) %>%
replace(is.na(.), 0) %>%
arrange(Site, Species)
)
# Chunk 1: setup
#| label: setup
#| include: false
# set options
knitr::opts_chunk$set(
tidy = FALSE,
message = FALSE,
warning = FALSE)
options(htmltools.dir.version = FALSE)
# Chunk 3
# load libraries
library(knitr)
library(tidyverse)
library(FSA)
# Chunk 4
elasmos <- read_delim("data/longline_elasmobranchs.txt", delim = "\t")
# Chunk 5: tbl-species-counts
#| label: tbl-species-counts
#| tbl-cap: Number of individuals per caught per site and overall across all sites and years.
#| echo: false
kable(
elasmos %>%
group_by(Species, Site) %>%
count() %>%
pivot_wider(names_from = Site, values_from = n) %>%
replace(is.na(.), 0) %>%
mutate(Total = Aransas_Bay + Corpus_Christi_Bay + Redfish_Bay)
)
# Chunk 6
# C. brevipinna, Carlson & Baremore 2005
C.brevipinna_YOY <- filter(elasmos, Species=="Carcharhinus_brevipinna" & Sex=="M" & FL<=812 | Species=="Carcharhinus_brevipinna" & Sex=="F" & FL<=844 | Species=="Carcharhinus_brevipinna" & Sex=="U" & FL<=844) %>%
mutate(Estimated_Stage="YOY")
C.brevipinna_JUV <- filter(elasmos, Species=="Carcharhinus_brevipinna" & Sex=="M" & FL>812 & FL<=1380 | Species=="Carcharhinus_brevipinna" & Sex=="F" & FL>844 & FL<=1360 | Species=="Carcharhinus_brevipinna" & Sex=="U" & FL>844 & FL<=1360) %>%
mutate(Estimated_Stage="JUV")
C.brevipinna_MAT <- filter(elasmos, Species=="Carcharhinus_brevipinna" & Sex=="M" & FL>1380 | Species=="Carcharhinus_brevipinna" & Sex=="F" & FL>1360 | Species=="Carcharhinus_brevipinna" & Sex=="U" & FL>1360) %>%
mutate(Estimated_Stage="MAT")
# C. leucas, Neer et al. 2005
C.leucas_YOY <- filter(elasmos, Species=="Carcharhinus_leucas" & FL<=700) %>%
mutate(Estimated_Stage="YOY")
C.leucas_JUV <- filter(elasmos, Species=="Carcharhinus_leucas" & Sex=="M" & FL>700 & FL<=2100 | Species=="Carcharhinus_leucas" & Sex=="F" & FL>700 & FL<=2250 | Species=="Carcharhinus_leucas" & Sex=="U" & FL>700 & FL<=2250) %>%
mutate(Estimated_Stage="JUV")
C.leucas_MAT <- filter(elasmos, Species=="Carcharhinus_leucas" & Sex=="M" & FL>2100 | Species=="Carcharhinus_leucas" & Sex=="F" & FL>2250 | Species=="Carcharhinus_leucas" & Sex=="U" & FL>2250) %>%
mutate(Estimated_Stage="MAT")
# Chunk 7
elasmos_stage <- bind_rows(C.brevipinna_YOY, C.brevipinna_JUV, C.brevipinna_MAT,
C.leucas_YOY, C.leucas_JUV, C.leucas_MAT)
# Chunk 8
elasmos_stage <- elasmos %>%
filter(Species %in% c("Carcharhinus_leucas", "Carcharhinus_brevipinna")) %>%
mutate(Estimated_Stage = case_when(Species == "Carcharhinus_brevipinna" & Sex=="M" & FL<=812 |
Species == "Carcharhinus_brevipinna" & Sex=="F" & FL<=844 |
Species == "Carcharhinus_brevipinna" & Sex=="U" & FL<=844 ~ "YOY",
Species=="Carcharhinus_brevipinna" & Sex=="M" & FL>812 & FL<=1380 |
Species=="Carcharhinus_brevipinna" & Sex=="F" & FL>844 & FL<=1360 |
Species=="Carcharhinus_brevipinna" & Sex=="U" & FL>844 & FL<=1360 ~ "JUV",
Species=="Carcharhinus_brevipinna" & Sex=="M" & FL>1380 |
Species=="Carcharhinus_brevipinna" & Sex=="F" & FL>1360 |
Species=="Carcharhinus_brevipinna" & Sex=="U" & FL>1360 ~ "MAT",
Species=="Carcharhinus_leucas" & FL<=700 ~ "YOY",
Species=="Carcharhinus_leucas" & Sex=="M" & FL>700 & FL<=2100 |
Species=="Carcharhinus_leucas" & Sex=="F" & FL>700 & FL<=2250 |
Species=="Carcharhinus_leucas" & Sex=="U" & FL>700 & FL<=2250 ~ "JUV",
Species=="Carcharhinus_leucas" & Sex=="M" & FL>2100 |
Species=="Carcharhinus_leucas" & Sex=="F" & FL>2250 |
Species=="Carcharhinus_leucas" & Sex=="U" & FL>2250 ~ "MAT"))
# Chunk 9
elasmos <- read_delim("data/elasmos_complete.txt", delim = "\t")
# Chunk 10: tbl-life-hist-counts
#| label: tbl-life-hist-counts
#| tbl-cap: Number of individuals per species caught at each site by life history stage.
#| echo: false
kable(
elasmos %>%
group_by(Species, Site, Estimated_Stage) %>%
count() %>%
pivot_wider(names_from = Estimated_Stage, values_from = n) %>%
replace(is.na(.), 0) %>%
mutate(Total = YOY + JUV + MAT + UND) %>%
select(Species, Site, Total, YOY, JUV, MAT, UND) %>%
arrange(Species)
)
# Chunk 11: tbl-YOY-years
#| label: tbl-YOY-years
#| tbl-cap: "Number of YOY caught at each site in each sampling year."
#| echo: false
#|
kable(
elasmos %>%
filter(Estimated_Stage == "YOY") %>%
group_by(Site, Year, Species) %>%
count() %>%
arrange(Year) %>%
pivot_wider(names_from = Year, values_from = n) %>%
replace(is.na(.), 0) %>%
arrange(Site, Species)
)
# Chunk 12
set_meta <- read_delim("data/set_data.txt", delim = "\t")
# Chunk 13
set_meta <- set_meta %>%
mutate(Hook_Hours = Hooks * Soak_Time)
# Chunk 14
elasmos <- elasmos %>%
unite(Set_ID, Year, Month, Day, Set, sep = "_", remove = FALSE) %>%
arrange(Set_ID)
# Chunk 15
elasmos_set <- elasmos %>%
count(Set_ID)
# add set id column
set_meta <- set_meta %>%
unite(Set_ID, Year, Month, Day, Set, sep = "_", remove = FALSE)
# join data sets
elasmos_set <- elasmos_set %>%
full_join(set_meta) %>%
replace_na(list(n = 0))
elasmos_set <- elasmos_set %>%
mutate(CPUE = n/Hook_Hours)
#| label: tbl-CPUE
#| tbl-cap: mean +/- sd CPUE
#| echo: false
kable(
elasmos_set %>%
group_by(Site) %>%
summarize(mean_CPUE = mean(CPUE),
std_CPUE = sd(CPUE))
)
# KW to test for significant heterogeneity
kruskal.test(CPUE ~ Site, data = elasmos_set)
# post-hoc Dunn test
dunnTest(CPUE ~ Site, data = elasmos_set, method = "bh")
# Chunk 1: setup
#| label: setup
#| include: false
# set options
knitr::opts_chunk$set(
tidy = FALSE,
message = FALSE,
warning = FALSE)
options(htmltools.dir.version = FALSE)
# Chunk 3
# load libraries
library(knitr)
library(tidyverse)
library(FSA)
# Chunk 4
elasmos <- read_delim("data/longline_elasmobranchs.txt", delim = "\t")
# Chunk 5: tbl-species-counts
#| label: tbl-species-counts
#| tbl-cap: Number of individuals per caught per site and overall across all sites and years.
#| echo: false
kable(
elasmos %>%
group_by(Species, Site) %>%
count() %>%
pivot_wider(names_from = Site, values_from = n) %>%
replace(is.na(.), 0) %>%
mutate(Total = Aransas_Bay + Corpus_Christi_Bay + Redfish_Bay)
)
# Chunk 6
# C. brevipinna, Carlson & Baremore 2005
C.brevipinna_YOY <- filter(elasmos, Species=="Carcharhinus_brevipinna" & Sex=="M" & FL<=812 | Species=="Carcharhinus_brevipinna" & Sex=="F" & FL<=844 | Species=="Carcharhinus_brevipinna" & Sex=="U" & FL<=844) %>%
mutate(Estimated_Stage="YOY")
C.brevipinna_JUV <- filter(elasmos, Species=="Carcharhinus_brevipinna" & Sex=="M" & FL>812 & FL<=1380 | Species=="Carcharhinus_brevipinna" & Sex=="F" & FL>844 & FL<=1360 | Species=="Carcharhinus_brevipinna" & Sex=="U" & FL>844 & FL<=1360) %>%
mutate(Estimated_Stage="JUV")
C.brevipinna_MAT <- filter(elasmos, Species=="Carcharhinus_brevipinna" & Sex=="M" & FL>1380 | Species=="Carcharhinus_brevipinna" & Sex=="F" & FL>1360 | Species=="Carcharhinus_brevipinna" & Sex=="U" & FL>1360) %>%
mutate(Estimated_Stage="MAT")
# C. leucas, Neer et al. 2005
C.leucas_YOY <- filter(elasmos, Species=="Carcharhinus_leucas" & FL<=700) %>%
mutate(Estimated_Stage="YOY")
C.leucas_JUV <- filter(elasmos, Species=="Carcharhinus_leucas" & Sex=="M" & FL>700 & FL<=2100 | Species=="Carcharhinus_leucas" & Sex=="F" & FL>700 & FL<=2250 | Species=="Carcharhinus_leucas" & Sex=="U" & FL>700 & FL<=2250) %>%
mutate(Estimated_Stage="JUV")
C.leucas_MAT <- filter(elasmos, Species=="Carcharhinus_leucas" & Sex=="M" & FL>2100 | Species=="Carcharhinus_leucas" & Sex=="F" & FL>2250 | Species=="Carcharhinus_leucas" & Sex=="U" & FL>2250) %>%
mutate(Estimated_Stage="MAT")
# Chunk 7
elasmos_stage <- bind_rows(C.brevipinna_YOY, C.brevipinna_JUV, C.brevipinna_MAT,
C.leucas_YOY, C.leucas_JUV, C.leucas_MAT)
# Chunk 8
elasmos_stage <- elasmos %>%
filter(Species %in% c("Carcharhinus_leucas", "Carcharhinus_brevipinna")) %>%
mutate(Estimated_Stage = case_when(Species == "Carcharhinus_brevipinna" & Sex=="M" & FL<=812 |
Species == "Carcharhinus_brevipinna" & Sex=="F" & FL<=844 |
Species == "Carcharhinus_brevipinna" & Sex=="U" & FL<=844 ~ "YOY",
Species=="Carcharhinus_brevipinna" & Sex=="M" & FL>812 & FL<=1380 |
Species=="Carcharhinus_brevipinna" & Sex=="F" & FL>844 & FL<=1360 |
Species=="Carcharhinus_brevipinna" & Sex=="U" & FL>844 & FL<=1360 ~ "JUV",
Species=="Carcharhinus_brevipinna" & Sex=="M" & FL>1380 |
Species=="Carcharhinus_brevipinna" & Sex=="F" & FL>1360 |
Species=="Carcharhinus_brevipinna" & Sex=="U" & FL>1360 ~ "MAT",
Species=="Carcharhinus_leucas" & FL<=700 ~ "YOY",
Species=="Carcharhinus_leucas" & Sex=="M" & FL>700 & FL<=2100 |
Species=="Carcharhinus_leucas" & Sex=="F" & FL>700 & FL<=2250 |
Species=="Carcharhinus_leucas" & Sex=="U" & FL>700 & FL<=2250 ~ "JUV",
Species=="Carcharhinus_leucas" & Sex=="M" & FL>2100 |
Species=="Carcharhinus_leucas" & Sex=="F" & FL>2250 |
Species=="Carcharhinus_leucas" & Sex=="U" & FL>2250 ~ "MAT"))
# Chunk 9
elasmos <- read_delim("data/elasmos_complete.txt", delim = "\t")
# Chunk 10: tbl-life-hist-counts
#| label: tbl-life-hist-counts
#| tbl-cap: Number of individuals per species caught at each site by life history stage.
#| echo: false
kable(
elasmos %>%
group_by(Species, Site, Estimated_Stage) %>%
count() %>%
pivot_wider(names_from = Estimated_Stage, values_from = n) %>%
replace(is.na(.), 0) %>%
mutate(Total = YOY + JUV + MAT + UND) %>%
select(Species, Site, Total, YOY, JUV, MAT, UND) %>%
arrange(Species)
)
# Chunk 11: tbl-YOY-years
#| label: tbl-YOY-years
#| tbl-cap: "Number of YOY caught at each site in each sampling year."
#| echo: false
#|
kable(
elasmos %>%
filter(Estimated_Stage == "YOY") %>%
group_by(Site, Year, Species) %>%
count() %>%
arrange(Year) %>%
pivot_wider(names_from = Year, values_from = n) %>%
replace(is.na(.), 0) %>%
arrange(Site, Species)
)
# Chunk 12
set_meta <- read_delim("data/set_data.txt", delim = "\t")
# Chunk 13
set_meta <- set_meta %>%
mutate(Hook_Hours = Hooks * Soak_Time)
# Chunk 14
elasmos <- elasmos %>%
unite(Set_ID, Year, Month, Day, Set, sep = "_", remove = FALSE) %>%
arrange(Set_ID)
# Chunk 15
elasmos_set <- elasmos %>%
count(Set_ID)
# Chunk 16
# add set id column
set_meta <- set_meta %>%
unite(Set_ID, Year, Month, Day, Set, sep = "_", remove = FALSE)
# join data sets
elasmos_set <- elasmos_set %>%
full_join(set_meta) %>%
replace_na(list(n = 0))
# Chunk 17
elasmos_set <- elasmos_set %>%
mutate(CPUE = n/Hook_Hours)
# Chunk 18: tbl-CPUE
#| label: tbl-CPUE
#| tbl-cap: mean +/- sd CPUE
#| echo: false
kable(
elasmos_set %>%
group_by(Site) %>%
summarize(mean_CPUE = mean(CPUE),
std_CPUE = sd(CPUE))
)
# Chunk 19
# KW to test for significant heterogeneity
kruskal.test(CPUE ~ Site, data = elasmos_set)
# Chunk 20
# post-hoc Dunn test
dunnTest(CPUE ~ Site, data = elasmos_set, method = "bh")
# Chunk 21
species <- "Carcharhinus_brevipinna"
species_CPUE <- elasmos %>%
filter(Species == species) %>%
count(Set_ID) %>%
full_join(set_meta) %>%
replace_na(list(n = 0)) %>%
mutate(CPUE = n/Hook_Hours,
CPUE_1000 = CPUE * 1000) %>%
group_by(Site) %>%
summarize(mean_CPUE = mean(CPUE_1000))
# Chunk 22
#| echo: false
kable(
species_CPUE %>%
pivot_wider(names_from = Site, values_from = mean_CPUE) %>%
replace(is.na(.), 0),
caption = "Catch per unit effort (1000 hook hours) for each site.",
digits = 2
)
# Chunk 23
# create empty list
species_CPUE <- list()
# calculate hook hours for each species per site
for(species in unique(elasmos$Species)){
species_CPUE[[species]] <- elasmos %>%
filter(Species == species) %>%
count(Set_ID) %>%
full_join(set_meta) %>%
replace_na(list(n = 0)) %>%
mutate(CPUE = n/Hook_Hours,
CPUE_1000 = CPUE * 1000)
}
# combine data frames in list into single
CPUE <- bind_rows(species_CPUE, .id = "Species")
# Chunk 24
# create empty dataframe for results
results <- setNames(data.frame(matrix(ncol = 2, nrow = 0)),
c("Species", "pvalue")) %>%
mutate(Species = as.character(Species),
pvalue = as.numeric(pvalue))
for(species in unique(CPUE$Species)){
# filter CPUE per species
tmp <- CPUE %>%
filter(Species == species)
# KW to test for significant heterogeneity
KW <- kruskal.test(CPUE ~ Site, data = tmp)
# extract p-value
df <- data.frame("Species" = species,
"pvalue" = as.numeric(KW$p.value))
results <- bind_rows(results, df)
}
# Chunk 25
CPUE_sign <- CPUE %>%
group_by(Species, Site) %>%
summarize(mean_CPUE = mean(CPUE_1000)) %>%
pivot_wider(names_from = Site, values_from = mean_CPUE) %>%
left_join(results) %>%
arrange(Species)
CPUE_sign
# create empty list
species_CPUE <- list()
# calculate hook hours for each species per site
for(species in unique(elasmos$Species)){
for(stage in unique(elasmos$Estimated_Stage)){
species_CPUE[[paste(species, stage, sep = ":")]] <- elasmos %>%
filter(Species == species & Estimated_Stage == stage) %>%
count(Set_ID) %>%
full_join(set_meta) %>%
replace_na(list(n = 0)) %>%
mutate(Estimate_Stage = stage,
CPUE = n/Hook_Hours,
CPUE_1000 = CPUE * 1000)
}
}
# combine data frames in list into single
CPUE <- bind_rows(species_CPUE, .id = "Species_Stage") %>%
select(Species_Stage, Set_ID, Site, Hooks, Soak_Time, Hook_Hours, CPUE, CPUE_1000) %>%
separate(Species_Stage, into = c("Species", "Stage"), sep = ":", remove = FALSE)
kable(
CPUE %>%
group_by(Species_Stage, Site) %>%
summarize(mean_CPUE = mean(CPUE_1000)) %>%
pivot_wider(names_from = Site, values_from = mean_CPUE) %>%
filter(if_any(c(Aransas_Bay, Corpus_Christi_Bay, Redfish_Bay), ~ . > 0)) %>%
separate(Species_Stage, into = c("Species", "Stage"), sep = ":") %>%
filter(!Stage == "UND")
)
# create empty dataframe for results
results_site <- setNames(data.frame(matrix(ncol = 2, nrow = 0)),
c("Site", "pvalue")) %>%
mutate(Site = as.character(Site),
pvalue = as.numeric(pvalue))
for(site in unique(CPUE$Site)){
# filter CPUE per species
tmp <- CPUE %>%
filter(Site == site)
# KW to test for significant heterogeneity
KW <- kruskal.test(CPUE ~ Species, data = tmp)
# extract p-value
df <- data.frame("Site" = species,
"pvalue" = as.numeric(KW$p.value))
results <- bind_rows(results, df)
}
# create empty dataframe for results
results_sp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)),
c("Species", "pvalue")) %>%
mutate(Species = as.character(Species),
pvalue = as.numeric(pvalue))
for(species in unique(CPUE$Species)){
# filter CPUE per species
tmp <- CPUE %>%
filter(Species == species)
# KW to test for significant heterogeneity
KW <- kruskal.test(CPUE ~ Site, data = tmp)
# extract p-value
df <- data.frame("Species" = species,
"pvalue" = as.numeric(KW$p.value))
results_sp <- bind_rows(results_sp, df)
}
# create empty dataframe for results
results_site <- setNames(data.frame(matrix(ncol = 2, nrow = 0)),
c("Site", "pvalue")) %>%
mutate(Site = as.character(Site),
pvalue = as.numeric(pvalue))
for(site in unique(CPUE$Site)){
# filter CPUE per species
tmp <- CPUE %>%
filter(Site == site)
# KW to test for significant heterogeneity
KW <- kruskal.test(CPUE ~ Species, data = tmp)
# extract p-value
df <- data.frame("Site" = species,
"pvalue" = as.numeric(KW$p.value))
results_site <- bind_rows(results_site, df)
}
View(results_site)
CPUE$Site
site
# filter CPUE per species
tmp <- CPUE %>%
filter(Site == site)
tmp
# KW to test for significant heterogeneity
KW <- kruskal.test(CPUE ~ Species, data = tmp)
KW
# extract p-value
df <- data.frame("Site" = species,
"pvalue" = as.numeric(KW$p.value))
df
# create empty dataframe for results
results_site <- setNames(data.frame(matrix(ncol = 2, nrow = 0)),
c("Site", "pvalue")) %>%
mutate(Site = as.character(Site),
pvalue = as.numeric(pvalue))
for(site in unique(CPUE$Site)){
# filter CPUE per species
tmp <- CPUE %>%
filter(Site == site)
# KW to test for significant heterogeneity
KW <- kruskal.test(CPUE ~ Species, data = tmp)
# extract p-value
df <- data.frame("Species" = species,
"pvalue" = as.numeric(KW$p.value))
results_site <- bind_rows(results_site, df)
}
results_site
# create empty dataframe for results
results_site <- setNames(data.frame(matrix(ncol = 2, nrow = 0)),
c("Site", "pvalue")) %>%
mutate(Site = as.character(Site),
pvalue = as.numeric(pvalue))
for(site in unique(CPUE$Site)){
# filter CPUE per species
tmp <- CPUE %>%
filter(Site == site)
# KW to test for significant heterogeneity
KW <- kruskal.test(CPUE ~ Species, data = tmp)
# extract p-value
df <- data.frame("Site" = site,
"pvalue" = as.numeric(KW$p.value))
results_site <- bind_rows(results_site, df)
}
results_site
KW
kable(
CPUE_sign,
digits = 2
)
# create empty list
species_CPUE <- list()
# calculate hook hours for each species per site
for(species in unique(elasmos$Species)){
for(stage in unique(elasmos$Estimated_Stage)){
species_CPUE[[paste(species, stage, sep = ":")]] <- elasmos %>%
filter(Species == species & Estimated_Stage == stage) %>%
count(Set_ID) %>%
full_join(set_meta) %>%
replace_na(list(n = 0)) %>%
mutate(Estimate_Stage = stage,
CPUE = n/Hook_Hours,
CPUE_1000 = CPUE * 1000)
}
}
# combine data frames in list into single
CPUE <- bind_rows(species_CPUE, .id = "Species_Stage") %>%
select(Species_Stage, Set_ID, Site, Hooks, Soak_Time, Hook_Hours, CPUE, CPUE_1000) %>%
separate(Species_Stage, into = c("Species", "Stage"), sep = ":", remove = FALSE)
kable(
CPUE %>%
group_by(Species_Stage, Site) %>%
summarize(mean_CPUE = mean(CPUE_1000)) %>%
pivot_wider(names_from = Site, values_from = mean_CPUE) %>%
filter(if_any(c(Aransas_Bay, Corpus_Christi_Bay, Redfish_Bay), ~ . > 0)) %>%
separate(Species_Stage, into = c("Species", "Stage"), sep = ":") %>%
filter(!Stage == "UND")
)
CPUE
# combine data frames in list into single
CPUE <- bind_rows(species_CPUE, .id = "Species_Stage") %>%
select(Species_Stage, Set_ID, Site, Hooks, Soak_Time, Hook_Hours, CPUE, CPUE_1000) %>%
separate(Species_Stage, into = c("Species", "Stage"), sep = ":", remove = FALSE) %>%
group_by(Species_Stage, Site) %>%
summarize(mean_CPUE = mean(CPUE_1000)) %>%
pivot_wider(names_from = Site, values_from = mean_CPUE) %>%
filter(if_any(c(Aransas_Bay, Corpus_Christi_Bay, Redfish_Bay), ~ . > 0)) %>%
separate(Species_Stage, into = c("Species", "Stage"), sep = ":") %>%
filter(!Stage == "UND")
kable(
CPUE
)
kable(
CPUE,
digits = 4
)
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
