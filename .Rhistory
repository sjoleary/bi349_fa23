library(patchwork)
# data wrangling
library(dplyr)
library(tidyr)
library(readr)
library(skimr)
library(janitor)
library(magrittr)
# turn off scientific notation
options(scipen=999)
# Chunk 4
disaster <- read_delim("data/nat-disasters_emdat-query-2021-10-05.txt", delim = "\t", skip = 6)
# Chunk 5
colnames(disaster)
# Chunk 6
disaster %>%
rename(DisNo = `Dis No`) %>%
head()
# Chunk 7
disaster <- read_delim("data/nat-disasters_emdat-query-2021-10-05.txt", delim = "\t", skip = 6) %>%
clean_names()
colnames(disaster)
# Chunk 8
skim(disaster)
unique(disaster$disaster_subgroup)
colnames(disaster)
ggplot(disaster, aes(x = disaster_subgroup)) +
geom_bar(stat = "count")
ggplot(disaster, aes(x = disaster_subgroup)) +
geom_bar(stat = "count")
ggplot(disaster, aes(x = disaster_type)) +
geom_bar(stat = "count")
ggplot(disaster, aes(x = disaster_subgroup)) +
geom_bar(stat = "count")
ggplot(disaster, aes(x = disaster_type)) +
geom_bar(stat = "count")
ggplot(disaster, aes(x = disaster_type)) +
geom_bar(stat = "count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(disaster, aes(x = disaster_type)) +
geom_bar(stat = "count") +
facet_wrap(. ~ region) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#| echo: false
damages <- disaster %>%
filter(!is.na(total_damages_000_us))
#|echo: false
ggplot(damages, aes(x = total_damages_000_us)) +
geom_histogram()
ggplot(damages, aes(x = total_damages_000_us)) +
geom_histogram() +
scale_y_sqrt()
ggplot(damages, aes(x = total_damages_000_us/1000000)) +
geom_histogram(binwidth = 5) +
facet_wrap(. ~ disaster_type) +
labs(x = "total damages [$ Million]")
#| eval: false
damages <- damages %>%
filter(disaster_type %in% c("Drought", "Earthquake", "Flood", "Storm", "Wildfire"))
ggplot(damages, aes(x = disaster_type, y = total_damages_000_us/1000000)) +
geom_boxplot()
damages %>%
group_by(disaster_type) %>%
summarize(mean = mean(total_damages_000_us)/1000000,
sd = sd(total_damages_000_us)/1000000,
min = min(total_damages_000_us)/1000000,
max = max(total_damages_000_us)/1000000) %>%
kable()
damages %>%
group_by(disaster_type) %>%
summarize(median = median(total_damages_000_us)/1000000,
mean = mean(total_damages_000_us)/1000000,
sd = sd(total_damages_000_us)/1000000,
min = min(total_damages_000_us)/1000000,
max = max(total_damages_000_us)/1000000) %>%
kable()
ggplot(damages, aes(x = year, y = total_damages_000_us/1000000)) +
geom_point()
ggplot(damages, aes(x = year, y = total_damages_000_us/1000000, fill = disaster_type)) +
geom_point(shape = 21)
ggplot(damages, aes(x = year, y = total_damages_000_us/1000000, fill = disaster_type)) +
geom_point(shape = 21, size = 2)
#| eval: false
ggplot(damages, aes(x = year, y = total_damages_000_us/1000000, color = continent)) +
geom_point() +
facet_wrap(. ~ disaster_type)
ggplot(damages, aes(x = year, y = total_damages_000_us/1000000, color = continent)) +
geom_point(size = 2) +
facet_wrap(. ~ disaster_type)
damages %>%
filter(disaster_type == "Storm") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, color = year)) +
geom_point() +
scale_color_viridis_c()
damages %>%
filter(disaster_type == "Flood") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, color = year)) +
geom_point() +
scale_color_viridis_b()
damages %>%
filter(disaster_type == "Earthquake") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000)) +
geom_point()
damages %>%
filter(disaster_type == "Drought") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000)) +
geom_point()
damages %>%
filter(disaster_type == "Wildfire") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000)) +
geom_point()
damages %>%
filter(disaster_type == "Storm") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, color = year)) +
geom_point()
damages %>%
filter(disaster_type == "Storm") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.7) +
scale_color_viridis_c()
P1 <- damages %>%
filter(disaster_type == "Storm") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.7) +
scale_fill_viridis_c()
P1
P1 <- damages %>%
filter(disaster_type == "Storm") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c()
P1
damages %>%
filter(disaster_type == "Earthquake") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, color = year)) +
geom_point() +
scale_color_viridis_b()
#| echo: false
P1 <- damages %>%
filter(disaster_type == "Storm") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c()
P2 <- damages %>%
filter(disaster_type == "Flood") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c()
P3 <- damages %>%
filter(disaster_type == "Earthquake") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c()
P4 <- damages %>%
filter(disaster_type == "Drought") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c()
P5 <- damages %>%
filter(disaster_type == "Wildfire") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c()
(P1 + P2 + P3) / (P4 + P5)
P1 + P2 + P3
P1 + P2 + P3 + P4 + P5 +
plot_layout(ncol = 2)
#| echo: false
#| fig-height: 12
P1 <- damages %>%
filter(disaster_type == "Storm") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c() +
labs(x = "disaster magnitude", y = "damages [$ Millions]") +
theme_standard +
theme(legend.position = "bottom")
P2 <- damages %>%
filter(disaster_type == "Flood") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c() +
labs(x = "disaster magnitude", y = "damages [$ Millions]") +
theme_standard +
theme(legend.position = "bottom")
P3 <- damages %>%
filter(disaster_type == "Earthquake") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c() +
labs(x = "disaster magnitude", y = "damages [$ Millions]") +
theme_standard +
theme(legend.position = "bottom")
P4 <- damages %>%
filter(disaster_type == "Drought") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c() +
labs(x = "disaster magnitude", y = "damages [$ Millions]") +
theme_standard +
theme(legend.position = "bottom")
P5 <- damages %>%
filter(disaster_type == "Wildfire") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c() +
labs(x = "disaster magnitude", y = "damages [$ Millions]") +
theme_standard +
theme(legend.position = "bottom")
P1 + P2 + P3 + P4 + P5 +
plot_layout(ncol = 2)
P1 <- damages %>%
filter(disaster_type == "Storm") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c() +
labs(x = "disaster magnitude", y = "damages [$ Millions]") +
theme_standard +
theme(legend.position = "bottom")
P1
P2 <- damages %>%
filter(disaster_type == "Flood") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c() +
labs(x = "disaster magnitude", y = "damages [$ Millions]") +
theme_standard +
theme(legend.position = "bottom")
P3 <- damages %>%
filter(disaster_type == "Earthquake") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c() +
labs(x = "disaster magnitude", y = "damages [$ Millions]") +
theme_standard +
theme(legend.position = "bottom")
P4 <- damages %>%
filter(disaster_type == "Drought") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c() +
labs(x = "disaster magnitude", y = "damages [$ Millions]") +
theme_standard +
theme(legend.position = "bottom")
P4 <- damages %>%
filter(disaster_type == "Drought") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c() +
labs(x = "disaster magnitude", y = "damages [$ Millions]") +
theme_standard +
theme(legend.position = "bottom")
P5 <- damages %>%
filter(disaster_type == "Wildfire") %>%
ggplot(aes(x = dis_mag_value, y = total_damages_000_us/1000000, fill = year)) +
geom_point(shape = 21, size = 3, alpha = 0.5) +
scale_fill_viridis_c() +
labs(x = "disaster magnitude", y = "damages [$ Millions]") +
theme_standard +
theme(legend.position = "bottom")
P1 + P2 + P3 + P4 + P5 +
plot_layout(ncol = 2)
total_yr <- disaster %>%
filter(!is.na(total_damages_000_us)) %>%
group_by(year, disaster_type) %>%
summarize(total_damages_yr = sum(total_damages_000_us))
total_yr <- disaster %>%
filter(!is.na(total_damages_000_us)) %>%
group_by(year, disaster_type) %>%
summarize(total_damages_yr = sum(total_damages_000_us)/1000000000)
ggplot(total_yr, aes(x = year, y = total_damages_yr/1000000, color = disaster_type)) +
geom_point()
#| echo: false
#| fig-width: 9
#| fig-height: 9
ggplot(total_yr, aes(x = year, y = total_damages_yr/1000000)) +
geom_point() +
geom_smooth() +
facet_wrap(. ~ disaster_type) +
theme(legend.position = "bottom")
#| echo: falsew
total_yr <- disaster %>%
filter(!is.na(total_damages_000_us) & disaster_type %in% c("Drought", "Earthquake", "Extreme Temperature",
"Flood", "Storm", "Wildfire")) %>%
group_by(year,disaster_type) %>%
summarize(total_damages_yr = sum(total_damages_000_us/1000000000),
events_yr = n())
ggplot(total_yr, aes(x = year, y = total_damages_yr)) +
geom_point() +
facet_wrap(. ~ disaster_type)
ggplot(total_yr, aes(x = year, y = total_damages_yr)) +
geom_point() +
facet_wrap(. ~ disaster_type)
head(total_yr)
#| echo: false
#|
ggplot(total_yr, aes(x = year, y = total_damages_yr)) +
geom_point() +
facet_wrap(. ~ disaster_type)
ggplot(total_yr, aes(x = events_yr, y = total_damages_yr)) +
geom_point() +
geom_smooth()
ggplot(total_yr, aes(x = year,                            #
y = disaster_type,                   #
size = total_damages_yr/1000000)) +  #
geom_point()                                            #
ggplot(total_yr, aes(x = year,                            #
y = disaster_type,                   #
size = total_damages_yr/1000000)) +  #
geom_point()                                            #
ggplot(total_yr, aes(x = year,
y = disaster_type,
size = total_damages_yr/1000000,
fill = disaster_type)) +
geom_point(shape = 21, alpha = .5) +
scale_size_continuous(breaks = c(10, 25, 50, 100, 200),
name = "damages [USD]") +
theme(legend.position = "bottom")
#| fig-width: 6
#| fig-height: 5
ggplot(total_yr, aes(x = year, y = disaster_type, size = total_damages_yr/1000000, fill = disaster_type)) +
geom_point(shape = 21, alpha = .5) +
scale_fill_viridis_d() +
scale_size_continuous(breaks = c(5, 10, 25, 50, 100, 200),
name = "damages [USD]") +
labs(x = "total damages incurred [USD]", y = "disaster type",
title = "Economic costs incurred by natural disasters (1900 - 2020)",
subtitle = "The size of the bubble represents the total damages incurred by all events in a given category.",
caption = "data: EMDAT/International Disaster Database") +
theme_standard +
theme(legend.position = "bottom") +
guides(fill = FALSE,
size = guide_legend(override.aes = list(fill = "black", alpha = 1)))
#| fig-width: 6
#| fig-height: 5
ggplot(total_yr, aes(x = year,
y = disaster_type,
size = total_damages_yr/1000000,
fill = disaster_type)) +
geom_point(shape = 21,
alpha = .5) +
scale_fill_viridis_d() +
scale_size_continuous(breaks = c(5, 10, 25, 50, 100, 200),
name = "damages [USD]") +
labs(x = "total damages incurred [USD]", y = "disaster type",
title = "Economic costs incurred by natural disasters (1900 - 2020)",
subtitle = "The size of the bubble represents the total damages incurred by all events in a given category.",
caption = "data: EMDAT/International Disaster Database") +
theme_standard +
theme(legend.position = "bottom") +
guides(fill = FALSE,
size = guide_legend(override.aes = list(fill = "black", alpha = 1)))
deaths <- disaster %>%
filter(!is.na(total_deaths)) %>%
group_by(year, disaster_type) %>%
summarize(total_deaths_yr = sum(total_deaths))
ggplot(deaths, aes(x = year, y = disaster_type, size = total_deaths_yr/100000, fill = disaster_type)) +
geom_point(shape = 21, alpha = .5) +
scale_fill_viridis_d() +
scale_size_continuous(breaks = c(.5, 1, 5, 10, 15, 30),
name = "100k deaths") +
labs(x = "total deaths incurred", y = "disaster type",
title = "Total deaths due to natural disasters (1900 - 2020)",
subtitle = "The size of the bubble represents the total loss of life incurred by all events per year.",
caption = "data: EMDAT/International Disaster Database") +
theme_standard +
theme(legend.position = "bottom") +
guides(fill = FALSE,
size = guide_legend(override.aes = list(fill = "black", alpha = 1)))
#| eval: false
#| fig-height: 5
#| fig-width: 6
deaths <- disaster %>%
filter(!is.na(total_deaths)) %>%
group_by(year, disaster_type) %>%
summarize(total_deaths_yr = sum(total_deaths))
head(deaths)
#| eval: false
#| fig-height: 5
#| fig-width: 6
ggplot(deaths, aes(x = year, y = disaster_type, size = total_deaths_yr/100000, fill = disaster_type)) +
geom_point(shape = 21, alpha = .5) +
scale_fill_viridis_d() +
scale_size_continuous(breaks = c(.5, 1, 5, 10, 15, 30),
name = "100k deaths") +
labs(x = "total deaths incurred", y = "disaster type",
title = "Total deaths due to natural disasters (1900 - 2020)",
subtitle = "The size of the bubble represents the total loss of life incurred by all events per year.",
caption = "data: EMDAT/International Disaster Database") +
theme_standard +
theme(legend.position = "bottom") +
guides(fill = FALSE,
size = guide_legend(override.aes = list(fill = "black", alpha = 1)))
#| label: setup
#| include: false
# custom functions ----
library(ggplot2)
theme_standard <- theme_classic() +
theme(
axis.text = element_text(size = 11, color = "black"),
axis.title = element_text(size = 16, color = "black"),
axis.title.y = element_text(vjust = 1.5, color = "black"),
axis.line = element_line(color = "black"),
legend.position = "bottom",
panel.background = element_rect(fill = "white", color = NA),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = "grey95", color = "black"),
strip.text.x = element_text(size = 16, color = "black"),
strip.text.y = element_text(size = 16, color = "black"))
theme_facet <- theme_classic() +
theme(
axis.text = element_text(size = 11, color = "black"),
axis.title = element_text(size = 16, color = "black"),
axis.title.y = element_text(vjust = 1.5, color = "black"),
axis.line = element_line(color = "black"),
legend.position = "bottom",
panel.background = element_rect(fill = "white", color = NA),
panel.border = element_rect(fill = NA, color = "black"),
panel.grid.major = element_line(color = "grey85"),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = "grey95", color = "black"),
strip.text.x = element_text(size = 16, color = "black"),
strip.text.y = element_text(size = 16, color = "black"))
# set options
knitr::opts_chunk$set(
tidy = FALSE,
message = FALSE,
warning = FALSE)
options(htmltools.dir.version = FALSE)
disaster <- read_delim("data/nat-disasters_emdat-query-2021-10-05.txt", delim = "\t", skip = 6) %>%
clean_names()
# load libraries
# reporting
library(knitr)
# visualization
library(ggplot2)
library(ggthemes)
library(patchwork)
# data wrangling
library(dplyr)
library(tidyr)
library(readr)
library(skimr)
library(janitor)
library(magrittr)
# turn off scientific notation
options(scipen=999)
disaster <- read_delim("data/nat-disasters_emdat-query-2021-10-05.txt", delim = "\t", skip = 6) %>%
clean_names()
total_yr <- disaster %>%
filter(!is.na(total_damages_000_us)) %>%
group_by(year,disaster_type) %>%
summarize(total_damages_yr = sum(total_damages_000_us))
deaths <- disaster %>%
filter(!is.na(total_deaths)) %>%
group_by(year, disaster_type) %>%
summarize(total_deaths_yr = sum(total_deaths))
#| fig-width: 7
#| fig-height: 11
#| fig-cap: "Impacts due to natural disasters (1900 - 2020). Impacts were calculated as total annual economic costs (top) and total annual loss of life (bottom) due to each disaster type per year. The size of the bubble is scaled to cost [$] and total deaths [100k]. Data was obtained from EMDAT/International Disaster Database"
#| echo: false
p1 <- ggplot(total_yr, aes(x = year, y = disaster_type, size = total_damages_yr/1000000, fill = disaster_type)) +
geom_point(shape = 21, alpha = .5) +
scale_fill_viridis_d() +
scale_size_continuous(breaks = c(5, 10, 25, 50, 100, 200),
name = "damages [USD]") +
labs(x = "total damages incurred [USD]", y = " ") +
theme_standard +
theme(legend.position = "bottom") +
guides(fill = FALSE,
size = guide_legend(override.aes = list(fill = "black", alpha = 1)))
p2 <- ggplot(deaths, aes(x = year, y = disaster_type, size = total_deaths_yr/100000, fill = disaster_type)) +
geom_point(shape = 21, alpha = .5) +
scale_fill_viridis_d() +
scale_size_continuous(breaks = c(.5, 1, 5, 10, 15, 30),
name = "100k deaths") +
labs(x = "total deaths incurred", y = " ",
title = "Total deaths due to natural disasters (1900 - 2020)") +
theme_standard +
theme(legend.position = "bottom") +
guides(fill = FALSE,
size = guide_legend(override.aes = list(fill = "black", alpha = 1)))
p1 / p2
install.packages("rnaturalearth")
install.packages("rnaturalearthdata")
install.packages("sf")
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
colnames(world)
world %>%
select(geometry) %>%
head()
ggplot(data = world) +
geom_sf()
ggplot(data = world) +
geom_sf(color = "black", fill = "orange")
ggplot(data = world) +
geom_sf(aes(fill = pop_est)) +
scale_fill_viridis_c(trans = "sqrt") +
coord_sf()
droughts <- disaster %>%
filter(year >= 2010 & year <= 2020) %>%
group_by(iso) %>%
summarize(droughts_total = n())
world <- world %>%
left_join(droughts, by = c("iso_a3" = "iso"))
head(world)
